Index: src/main/java/alabaster/crabbersdelight/common/registry/ModItems.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package alabaster.crabbersdelight.common.registry;\r\n\r\nimport alabaster.crabbersdelight.CrabbersDelight;\r\nimport com.google.common.collect.Sets;\r\nimport net.minecraft.world.food.FoodProperties;\r\nimport net.minecraft.world.item.BlockItem;\r\nimport net.minecraft.world.item.Item;\r\nimport net.minecraft.world.item.Items;\r\nimport net.minecraftforge.registries.DeferredRegister;\r\nimport net.minecraftforge.registries.ForgeRegistries;\r\nimport net.minecraftforge.registries.RegistryObject;\r\nimport alabaster.crabbersdelight.common.CDFoodValues;\r\nimport vectorwing.farmersdelight.common.item.DrinkableItem;\r\nimport vectorwing.farmersdelight.common.item.ConsumableItem;\r\n\r\nimport java.util.LinkedHashSet;\r\nimport java.util.function.Supplier;\r\n\r\npublic class ModItems {\r\n    public static final DeferredRegister<Item> ITEMS = DeferredRegister.create(ForgeRegistries.ITEMS, CrabbersDelight.MODID);\r\n    public static LinkedHashSet<RegistryObject<Item>> CREATIVE_TAB_ITEMS = Sets.newLinkedHashSet();\r\n\r\n    public static RegistryObject<Item> registerWithTab(final String name, final Supplier<Item> supplier) {\r\n        RegistryObject<Item> block = ITEMS.register(name, supplier);\r\n        CREATIVE_TAB_ITEMS.add(block);\r\n        return block;\r\n    }\r\n\r\n    // Basic Items\r\n    public static Item.Properties basicItem() {\r\n        return new Item.Properties();\r\n    }\r\n\r\n    // Soups & Stews\r\n    public static Item.Properties bowlFoodItem(FoodProperties food) {\r\n        return new Item.Properties().food(food).craftRemainder(Items.BOWL).stacksTo(16);\r\n    }\r\n\r\n    // Foods\r\n    public static Item.Properties foodItem(FoodProperties food) {\r\n        return new Item.Properties().food(food);\r\n    }\r\n\r\n    // Drinks\r\n    public static Item.Properties drinkItem(FoodProperties food) {\r\n        return new Item.Properties().food(food).craftRemainder(Items.GLASS_BOTTLE).stacksTo(16);\r\n    }\r\n\r\n    // Basic Items\r\n    public static final RegistryObject<Item> PEARL = registerWithTab(\"pearl\",\r\n            () -> new Item(basicItem()));\r\n\r\n    // Foods\r\n    public static final RegistryObject<Item> RAW_CRAB = registerWithTab(\"raw_crab\",\r\n            () -> new Item(foodItem(CDFoodValues.RAW_CRAB)));\r\n\r\n    public static final RegistryObject<Item> COOKED_CRAB = registerWithTab(\"cooked_crab\",\r\n            () -> new Item(foodItem(CDFoodValues.COOKED_CRAB)));\r\n\r\n    public static final RegistryObject<Item> RAW_CLAWSTER = registerWithTab(\"raw_clawster\",\r\n            () -> new Item(foodItem(CDFoodValues.RAW_CLAWSTER)));\r\n\r\n    public static final RegistryObject<Item> COOKED_CLAWSTER = registerWithTab(\"cooked_clawster\",\r\n            () -> new Item(foodItem(CDFoodValues.COOKED_CLAWSTER)));\r\n\r\n    public static final RegistryObject<Item> RAW_SHRIMP = registerWithTab(\"raw_shrimp\",\r\n            () -> new Item(foodItem(CDFoodValues.RAW_SHRIMP)));\r\n\r\n    public static final RegistryObject<Item> COOKED_SHRIMP = registerWithTab(\"cooked_shrimp\",\r\n            () -> new Item(foodItem(CDFoodValues.COOKED_SHRIMP)));\r\n\r\n    public static final RegistryObject<Item> CLAM = registerWithTab(\"clam\",\r\n            () -> new Item(basicItem()));\r\n\r\n    public static final RegistryObject<Item> RAW_CLAM_MEAT = registerWithTab(\"raw_clam_meat\",\r\n            () -> new Item(foodItem(CDFoodValues.RAW_CLAM_MEAT)));\r\n\r\n    public static final RegistryObject<Item> COOKED_CLAM_MEAT = registerWithTab(\"cooked_clam_meat\",\r\n            () -> new Item(foodItem(CDFoodValues.COOKED_CLAM_MEAT)));\r\n\r\n    public static final RegistryObject<Item> KELP_SHAKE = registerWithTab(\"kelp_shake\",\r\n            () -> new DrinkableItem(drinkItem(CDFoodValues.KELP_SHAKE), true, false));\r\n\r\n    public static final RegistryObject<Item> CRAB_CAKES = registerWithTab(\"crab_cakes\",\r\n            () -> new Item(foodItem(CDFoodValues.CRAB_CAKES)));\r\n\r\n    public static final RegistryObject<Item> CRAB_LEGS = registerWithTab(\"crab_legs\",\r\n            () -> new Item(foodItem(CDFoodValues.CRAB_LEGS)));\r\n\r\n    public static final RegistryObject<Item> FISH_STICK = registerWithTab(\"fish_stick\",\r\n            () -> new Item(foodItem(CDFoodValues.FISH_STICK)));\r\n\r\n    public static final RegistryObject<Item> SURF_AND_TURF = registerWithTab(\"surf_and_turf\",\r\n            () -> new Item(foodItem(CDFoodValues.SURF_AND_TURF)));\r\n\r\n    public static final RegistryObject<Item> SHRIMP_SKEWER = registerWithTab(\"shrimp_skewer\",\r\n            () -> new Item(foodItem(CDFoodValues.SHRIMP_SKEWER)));\r\n\r\n    public static final RegistryObject<Item> CLAM_BAKE = registerWithTab(\"clam_bake\",\r\n            () -> new Item(foodItem(CDFoodValues.CLAM_BAKE)));\r\n\r\n    public static final RegistryObject<Item> CLAM_CHOWDER = registerWithTab(\"clam_chowder\",\r\n            () -> new ConsumableItem(bowlFoodItem(CDFoodValues.CLAM_CHOWDER), true));\r\n\r\n    public static final RegistryObject<Item> COOKED_TROPICAL_FISH = registerWithTab(\"cooked_tropical_fish\",\r\n            () -> new Item(foodItem(CDFoodValues.COOKED_TROPICAL_FISH)));\r\n\r\n    public static final RegistryObject<Item> TROPICAL_FISH_SLICE = registerWithTab(\"tropical_fish_slice\",\r\n            () -> new Item(foodItem(CDFoodValues.TROPICAL_FISH_SLICE)));\r\n\r\n    public static final RegistryObject<Item> COOKED_TROPICAL_FISH_SLICE = registerWithTab(\"cooked_tropical_fish_slice\",\r\n            () -> new Item(foodItem(CDFoodValues.COOKED_TROPICAL_FISH_SLICE)));\r\n\r\n    public static final RegistryObject<Item> BISQUE = registerWithTab(\"bisque\",\r\n            () -> new ConsumableItem(bowlFoodItem(CDFoodValues.BISQUE), true));\r\n\r\n    public static final RegistryObject<Item> SEAFOOD_GUMBO = registerWithTab(\"seafood_gumbo\",\r\n            () -> new ConsumableItem(bowlFoodItem(CDFoodValues.SEAFOOD_GUMBO), true));\r\n\r\n    // Barrels\r\n    public static final RegistryObject<Item> CRAB_BARREL = registerWithTab(\"crab_barrel\",\r\n            () -> new BlockItem(ModBlocks.CRAB_BARREL.get(), basicItem()));\r\n\r\n    public static final RegistryObject<Item> CLAM_BARREL = registerWithTab(\"clam_barrel\",\r\n            () -> new BlockItem(ModBlocks.CLAM_BARREL.get(), basicItem()));\r\n\r\n    public static final RegistryObject<Item> CLAWSTER_BARREL = registerWithTab(\"clawster_barrel\",\r\n            () -> new BlockItem(ModBlocks.CLAWSTER_BARREL.get(), basicItem()));\r\n\r\n    public static final RegistryObject<Item> SHRIMP_BARREL = registerWithTab(\"shrimp_barrel\",\r\n            () -> new BlockItem(ModBlocks.SHRIMP_BARREL.get(), basicItem()));\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/alabaster/crabbersdelight/common/registry/ModItems.java b/src/main/java/alabaster/crabbersdelight/common/registry/ModItems.java
--- a/src/main/java/alabaster/crabbersdelight/common/registry/ModItems.java	
+++ b/src/main/java/alabaster/crabbersdelight/common/registry/ModItems.java	
@@ -3,9 +3,8 @@
 import alabaster.crabbersdelight.CrabbersDelight;
 import com.google.common.collect.Sets;
 import net.minecraft.world.food.FoodProperties;
-import net.minecraft.world.item.BlockItem;
-import net.minecraft.world.item.Item;
-import net.minecraft.world.item.Items;
+import net.minecraft.world.item.*;
+import net.minecraft.world.level.block.Block;
 import net.minecraftforge.registries.DeferredRegister;
 import net.minecraftforge.registries.ForgeRegistries;
 import net.minecraftforge.registries.RegistryObject;
@@ -14,9 +13,12 @@
 import vectorwing.farmersdelight.common.item.ConsumableItem;
 
 import java.util.LinkedHashSet;
+import java.util.Map;
 import java.util.function.Supplier;
 
-public class ModItems {
+@SuppressWarnings("unused")
+public class ModItems
+{
     public static final DeferredRegister<Item> ITEMS = DeferredRegister.create(ForgeRegistries.ITEMS, CrabbersDelight.MODID);
     public static LinkedHashSet<RegistryObject<Item>> CREATIVE_TAB_ITEMS = Sets.newLinkedHashSet();
 
